// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using channelbot_2.Models;

namespace channelbot_2.Migrations
{
    [DbContext(typeof(ModelDbContext))]
    [Migration("20190310190917_Add_RedditTokenDates")]
    partial class Add_RedditTokenDates
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("channelbot_2.Models.RedditToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationDate");

                    b.Property<DateTime>("ExpirationDate");

                    b.Property<string>("Token");

                    b.HasKey("Id");

                    b.ToTable("RedditTokens");
                });

            modelBuilder.Entity("channelbot_2.Models.YoutubeNotification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AuthorLink");

                    b.Property<string>("AuthorName");

                    b.Property<string>("ChannelId");

                    b.Property<string>("Link");

                    b.Property<bool>("PostedToReddit");

                    b.Property<string>("PublishedDate");

                    b.Property<string>("Title");

                    b.Property<string>("UpdatedDate");

                    b.Property<string>("VideoId");

                    b.HasKey("Id");

                    b.ToTable("YoutubeNotifications");
                });
#pragma warning restore 612, 618
        }
    }
}
